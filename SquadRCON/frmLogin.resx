<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAQEBNwEBAncAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAQECDAEBAoIBAQLsAQECVgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAQIRAQECTQEBAlwBAQJOAQECIAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAQECMgEBAlMBAQJYAQECQgEBAkcBAQK2AQEC7wEBAv4BAQEaAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQECPwEBArYBAQLVAQEC3AEBAtUBAQK/AQECZwAA
        AAAAAAAAAQECBAEBAokBAQLIAQEC2AEBAtsBAQLQAQEC0gEBAvwBAQL/AQEC2wEBAAIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAhYBAQLIAQEC/wEBAv8BAQL/AQEC/wEB
        Av8BAQLfAQECPAAAAAABAQJuAQEC8wEBAv8BAQL/AQEC/wEBAv8BAQL/AQEC/wEBAv8BAQKXAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQECcgEBAv8BAQL/AQEC/wEB
        Av8BAQL/AQEC/wEBAv8BAQKvAQECEQEBAuABAQL/AQEC/wEBAv8BAQL/AQEC/wEBAv8BAQL/AQEC/wEB
        AkIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAQLZAQEC/wEB
        Av8BAQL7AQECvAEBAvMBAQL/AQEC/wEBAvoBAQJTAQEC/wEBAv8BAQL/AQEC3wEBArMBAQL6AQEC/wEB
        Av8BAQL9AQECBgAAAAAAAAAAAAAAAAAAAAAAAAAAAQECLAEBAiIAAAAAAAAAAAAAAAAAAAAAAAAAAAEB
        Av8BAQL/AQEC/wEBAvMBAQIoAQEC1wEBAv8BAQL/AQEC/wEBApUBAQL/AQEC/wEBAv8BAQKZAQECIQEB
        Au8BAQL/AQEC/wEBAvMBAQIPAQECCQEBAgEAAAAAAQEBAwEBAikBAQKrAQECSAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAQEC/wEBAv8BAQL/AQEC8gEBAg4BAQLSAQEC/wEBAv8BAQL/AQECnAEBAv8BAQL/AQEC/wEB
        ApABAQIZAQEC7gEBAv8BAQL/AQEC5AEBAlIBAQJeAQECIwAAAAABAQEYAQECxgEBAucBAQAGAAAAAAAA
        AAAAAAAAAAAAAAAAAAABAQL/AQEC/wEBAv8BAQLzAQECEgEBAtMBAQL/AQEC/wEBAv8BAQKdAQEC/wEB
        Av8BAQL/AQECkgEBAhsBAQLuAQEC/wEBAv8BAQLkAQECdQEBAv8BAQKPAAAAAAEBAjIBAQLwAQECugEB
        Ai4BAQIJAAAAAAAAAAAAAAAAAAAAAAEBAvsBAQL9AQEC/QEBAvEBAQELAQEC1QEBAv8BAQL/AQEC/wEB
        ApgBAQL/AQEC/wEBAv8BAQKSAQECGwEBAu4BAQL/AQEC/wEBAuUBAQFvAQEC/wEBAvQBAQIBAAAAAAEB
        AicBAQL9AQEC6wEBAo0BAQIKAQEBAAAAAAABAQEAAQECGQEBAjQBAQIzAQECFQEBAmwBAQL9AQEC/wEB
        Av8BAQL/AQEChgEBAv8BAQL/AQEC/wEBApIBAQIbAQEC7gEBAv8BAQL/AQEC5QEBAm8BAQL/AQEC/wEB
        AocAAAAAAAAAAAEBAjIBAQL2AQEC+gEBAvMBAQAOAAAAAAEBASkAAAAAAQECAgAAAAABAQJtAQEC7wEB
        Av8BAQL/AQEC/wEBAs4BAQJ7AQEC/wEBAv8BAQL/AQECkgEBAhsBAQLuAQEC/wEBAv8BAQLmAQECbwEB
        Av8BAQL/AQEC8wEBAmUBAQJIAQECqAEBAvwBAQL/AQEC/wEBAsABAQJTAQEBNQAAAAAAAAAAAQEChAEB
        AugBAQL/AQEC/wEBAv8BAQL4AQECRgEBAngBAQL/AQEC/wEBAv8BAQKSAQECGwEBAu4BAQL/AQEC/wEB
        AuYBAQJvAQEC/wEBAv8BAQL/AQEC4wEBAtwBAQL1AQEC/wEBAv8BAQL/AQEC/QEBAqwBAQETAAAAAAEB
        AncBAQLtAQEC/wEBAv8BAQL/AQEC+gEBAlsBAQIFAQECeAEBAv8BAQL/AQEC/wEBApIBAQIbAQEC7gEB
        Av8BAQL/AQEC5gEBAm8BAQL/AQEC/wEBAv8BAQL/AQEC/wEBAv8BAQL/AQEC/wEBAv8BAQL/AQECiAEB
        BAEBAQJJAQEC6AEBAv8BAQL/AQEC/wEBAt8BAQJjAAAAAAAAAAABAQJ4AQEC/wEBAv8BAQL/AQECkgEB
        AhsBAQLuAQEC/wEBAv8BAQLmAQECbgEBAv8BAQL/AQEC/wEBAv8BAQL/AQEC/wEBAv8BAQL/AQEC8wEB
        AqABAQInAAAAAAEBAr0BAQL/AQEC/wEBAv8BAQLYAQECWQAAAAAAAAAAAAAAAAEBAncBAQL/AQEC/wEB
        Av8BAQKSAQECGwEBAu4BAQL/AQEC/wEBAuYBAQJuAQEC/wEBAv8BAQL/AQEC/wEBAv8BAQL/AQEC/wEB
        Av8BAQLZAQECIgAAAAAAAAAAAQEC/wEBAv8BAQL/AQEC+gEBAmoBAQI7AQECZAEBAmUBAQJPAQECeAEB
        Av8BAQL/AQEC/wEBApIBAQIbAQEC7gEBAv8BAQL/AQEC5gEBAm4BAQL/AQEC/wEBAv8BAQL/AQEC/wEB
        Av8BAQL/AQEC/wEBApsAAAAAAAAAAAAAAAABAQL/AQEC/wEBAv8BAQL0AQECGAEBAtMBAQL/AQEC/wEB
        Av8BAQJ7AQEC/wEBAv8BAQL/AQECkgEBAhsBAQLuAQEC/wEBAv8BAQLmAQECbgEBAv8BAQL/AQEC/wEB
        Av8BAQL/AQEC/wEBAv8BAQLnAQEBMgEBAgAAAAAAAAAAAAEBAv8BAQL/AQEC/wEBAvQBAQIeAQECzQEB
        Av8BAQL/AQEC/wEBAnoBAQL/AQEC/wEBAv8BAQKRAQECGQEBAu4BAQL/AQEC/wEBAuYBAQJuAQEC/wEB
        Av8BAQL/AQEC/wEBAv8BAQL/AQEC/wEBAp8BAQMJAQECAAAAAAAAAAAAAQEC/wEBAv8BAQL/AQEC9AEB
        Ah8BAQLLAQEC/wEBAv8BAQL/AQEBeQEBAv8BAQL/AQEC/wEBApABAQIZAQEC7QEBAv8BAQL/AQEC5wEB
        AmwBAQL/AQEC/wEBAv8BAQL/AQEC/wEBAv8BAQL/AQEC6wEBAoEBAQICAAAAAAAAAAABAQL0AQEC/wEB
        Av8BAQL5AQEChAEBAuMBAQL/AQEC/wEBAvgBAQJuAQEC/wEBAv8BAQL/AQECxQEBAm0BAQL2AQEC/wEB
        Av8BAQLZAQECcwEBAv8BAQL/AQEC/wEBAv8BAQL/AQEC/wEBAv8BAQL/AQEC/gEBAjcAAAAAAAAAAAEB
        AqgBAQL/AQEC/wEBAv8BAQL3AQEC/QEBAv8BAQL/AQECwQEBAikBAQL/AQEC/wEBAv8BAQL7AQEC9QEB
        Av4BAQL/AQEC/wEBAoYBAQK1AQEC/wEBAv8BAQL/AQEC8gEBAokBAQJIAQECzwEBAv8BAQL/AQECxQEB
        Ag0AAAAAAQECOAEBAv0BAQL/AQEC/wEBAv8BAQL/AQEC/wEBAv8BAQJYAQECBAEBAqQBAQL/AQEC/wEB
        Av8BAQL/AQEC/wEBAv8BAQLqAQECVgEBAvYBAQL/AQEC/wEBAv8BAQL7AQECRQEBAgUBAQKcAQEC/wEB
        Av8BAQLiAQECYAAAAAABAQIFAQECaAEBAvgBAQL/AQEC/wEBAv8BAQL/AQECdgEBAg0AAAAAAQECJAEB
        Aq0BAQL/AQEC/wEBAv8BAQL/AQEC5wEBAmcBAQK9AQEC/wEBAv8BAQL/AQEC/wEBAv4BAQI9AAAAAAEB
        AiUBAQJrAQECZgEBAjkBAQIgAAAAAAAAAAABAQILAQECUAEBAnQBAQKMAQECfgEBAlYBAQIQAAAAAAAA
        AAAAAAAAAQECKgEBAl4BAQKAAQEChwEBAm4BAQJZAQECuQEBAv8BAQL/AQEC/wEBAv8BAQL/AQECugEB
        AhUAAAAAAAAAAAEBAgoBAQAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQECAgEBAhUBAQIKAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAgsBAQARAAAAAAEBAgEBAQKYAQEC4wEBAv8BAQL/AQEC/wEB
        At0BAQI6AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAg8BAQLIAQEC/wEB
        As4BAQL/AQECygAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQECMQEB
        AuYBAQKrAQECnAEBAv8BAQLuAQECKQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQECBAEB
        AikBAQK7AQEC0QEBAgwBAQK/AQEC/wEBAv8BAQJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAABAQIRAQECvwEBAuYBAQInAAAAAAEBAlIBAQLgAQEC7AEBAgwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAABAQLLAQECiwAAAAAAAAAAAQEAAwEBAhkBAQI0AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////////z////4//weAP/4DgD/+AQB//AEAf/wgCH78IAh8/CAITPwgC
        E4/4AhHH8EIRg8DCEAHBwhABg8IQAwfCEAcPwhAHCEIQDwhCEA8IQhAHAEIQBwBAAEOAwCDDweBA//f5
        gP///4H////B////wf///5H///85////P/8=
</value>
  </data>
</root>